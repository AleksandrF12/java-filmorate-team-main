--создание таблицы ratings
CREATE TABLE IF NOT EXISTS ratings_mpa (
        rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        rating_name VARCHAR(10) NOT NULL,
        constraint uq1 unique (rating_name)
);

--создание таблицы genre
CREATE TABLE IF NOT EXISTS genre (
        genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        genre_name VARCHAR(100) NOT NULL,
        constraint uq2 unique (genre_name)
);

--создание таблицы users
CREATE TABLE IF NOT EXISTS users (
        user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        email VARCHAR(320) NOT NULL,
        login VARCHAR(100) NOT NULL,
        name VARCHAR(100) NOT NULL,
        birthday DATE
);

--создание таблицы films
CREATE TABLE IF NOT EXISTS films (
        film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name VARCHAR(100) NOT NULL,
        description VARCHAR(1000),
        release_date DATE,
        duration INTEGER,
        rate INTEGER,
        rating_id INTEGER REFERENCES ratings_mpa (rating_id) ON DELETE SET NULL
);

--создание таблицы films_genre
CREATE TABLE IF NOT EXISTS films_genre (
        films_genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        film_id INTEGER REFERENCES films (film_id) ON DELETE CASCADE,
        genre_id INTEGER REFERENCES genre (genre_id) ON DELETE CASCADE
);

--создание таблицы friends
CREATE TABLE IF NOT EXISTS friends (
        user_friend_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        user_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
        friend_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
        friend_status BOOLEAN DEFAULT FALSE
);

--создание таблицы films_like
CREATE TABLE IF NOT EXISTS films_like (
        films_like_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        film_id INTEGER REFERENCES films (film_id) ON DELETE CASCADE,
        user_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE
);

--создание таблицы directors
CREATE TABLE IF NOT EXISTS directors (
        director_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name VARCHAR(100) NOT NULL
);

--создание таблицы films_director
CREATE TABLE IF NOT EXISTS films_director (
        films_director_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        film_id INTEGER REFERENCES films (film_id) ON DELETE CASCADE,
        director_id INTEGER REFERENCES directors (director_id) ON DELETE CASCADE
);
